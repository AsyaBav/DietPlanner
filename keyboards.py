from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardMarkup, KeyboardButton
from datetime import datetime, timedelta
from config import MEAL_TYPES, WATER_INCREMENTS

# –û—Å–Ω–æ–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ
start_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üöÄ –ü–æ–≥–Ω–∞–ª–∏!")],
        [KeyboardButton(text="‚ÑπÔ∏è –û –±–æ—Ç–µ")]
    ],
    resize_keyboard=True
)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ –ø–æ–ª–∞
gender_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="–ú—É–∂—á–∏–Ω–∞"), KeyboardButton(text="–ñ–µ–Ω—â–∏–Ω–∞")]
    ],
    resize_keyboard=True
)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —É—Ä–æ–≤–Ω—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
activity_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="–°–∏–¥—è—á–∏–π –æ–±—Ä–∞–∑ –∂–∏–∑–Ω–∏")],
        [KeyboardButton(text="–õ–µ–≥–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (1-2 —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏ –≤ –Ω–µ–¥–µ–ª—é)")],
        [KeyboardButton(text="–°—Ä–µ–¥–Ω—è—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (3-5 —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫)")],
        [KeyboardButton(text="–í—ã—Å–æ–∫–∞—è –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å (6-7 —Ç—Ä–µ–Ω–∏—Ä–æ–≤–æ–∫)")],
        [KeyboardButton(text="–ê—Ç–ª–µ—Ç (–µ–∂–µ–¥–Ω–µ–≤–Ω—ã–µ –∏–Ω—Ç–µ–Ω—Å–∏–≤–Ω—ã–µ —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∏)")]
    ],
    resize_keyboard=True
)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ü–µ–ª–∏
goal_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üîª –ü–æ—Ö—É–¥–µ–Ω–∏–µ")],
        [KeyboardButton(text="üî∫ –ù–∞–±–æ—Ä –≤–µ—Å–∞")],
        [KeyboardButton(text="üîÑ –ü–æ–¥–¥–µ—Ä–∂–∞–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –≤–µ—Å–∞")]
    ],
    resize_keyboard=True
)

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
after_calories_keyboard = ReplyKeyboardMarkup(
    keyboard=[
        [KeyboardButton(text="üë§ –ü—Ä–æ—Ñ–∏–ª—å"), KeyboardButton(text="üìñ –ú–æ–π –¥–Ω–µ–≤–Ω–∏–∫")],
        [KeyboardButton(text="üçΩ –†–∞—Ü–∏–æ–Ω"), KeyboardButton(text="üíß –¢—Ä–µ–∫–µ—Ä –≤–æ–¥—ã")],
        [KeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞"), KeyboardButton(text="üç≥ –†–µ—Ü–µ–ø—Ç—ã")],
        [KeyboardButton(text="ü©∫ –ö–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è —Å –¥–∏–µ—Ç–æ–ª–æ–≥–æ–º"), KeyboardButton(text="üõí –ü—Ä–æ–¥—É–∫—Ç–æ–≤–∞—è –∫–æ—Ä–∑–∏–Ω–∞")],
        [KeyboardButton(text="üìö –°—Ç–∞—Ç—å–∏"), KeyboardButton(text="üìà –û—Ç—á–µ—Ç")]
    ],
    resize_keyboard=True
)


def create_date_selection_keyboard(current_date_str):
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –¥–∞—Ç—ã –¥–ª—è –¥–Ω–µ–≤–Ω–∏–∫–∞."""
    # –ü–∞—Ä—Å–∏–º —Ç–µ–∫—É—â—É—é –¥–∞—Ç—É
    current_date = datetime.strptime(current_date_str, "%Y-%m-%d")

    # –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è 3 –ø—Ä–µ–¥—ã–¥—É—â–∏—Ö –¥–Ω–µ–π, —Ç–µ–∫—É—â–µ–≥–æ –∏ 3 –±—É–¥—É—â–∏—Ö
    date_buttons = []

    for i in range(-3, 4):
        date = current_date + timedelta(days=i)
        date_str = date.strftime("%Y-%m-%d")
        display_str = date.strftime("%d.%m") + (" (—Å–µ–≥–æ–¥–Ω—è)" if i == 0 else "")
        date_buttons.append(InlineKeyboardButton(text=display_str, callback_data=f"date:{date_str}"))

    # –ö–æ–º–ø–æ–Ω—É–µ–º –∫–Ω–æ–ø–∫–∏ –ø–æ 1 –≤ —Ä—è–¥
    keyboard = [[button] for button in date_buttons]

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
    keyboard.append([
        InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç", callback_data="add_food"),
        InlineKeyboardButton(text="üóë –û—á–∏—Å—Ç–∏—Ç—å –¥–µ–Ω—å", callback_data="clear_diary")
    ])

    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def create_meal_types_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ –ø—Ä–∏–µ–º–∞ –ø–∏—â–∏."""
    keyboard = []

    # –°–æ–∑–¥–∞–µ–º –ø–æ 2 –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥
    for i in range(0, len(MEAL_TYPES), 2):
        row = []
        row.append(InlineKeyboardButton(text=MEAL_TYPES[i], callback_data=f"meal_type:{MEAL_TYPES[i]}"))

        if i + 1 < len(MEAL_TYPES):
            row.append(InlineKeyboardButton(text=MEAL_TYPES[i + 1], callback_data=f"meal_type:{MEAL_TYPES[i + 1]}"))

        keyboard.append(row)

    # –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –æ—Ç–º–µ–Ω—ã
    keyboard.append([InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ –¥–Ω–µ–≤–Ω–∏–∫—É", callback_data="return_to_diary")])

    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def create_food_entry_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤–≤–æ–¥–∞ –ø—Ä–æ–¥—É–∫—Ç–∞."""
    keyboard = [
        [InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥ –∫ –≤—ã–±–æ—Ä—É –ø—Ä–∏–µ–º–∞ –ø–∏—â–∏", callback_data="return_to_diary")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


'''def create_water_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è —Ç—Ä–µ–∫–µ—Ä–∞ –≤–æ–¥—ã."""
    keyboard = [
        [
            InlineKeyboardButton(text="+200 –º–ª", callback_data="water_add:200"),
            InlineKeyboardButton(text="+300 –º–ª", callback_data="water_add:300"),
            InlineKeyboardButton(text="+500 –º–ª", callback_data="water_add:500")
        ],
        [
            InlineKeyboardButton(text="üîß –°–≤–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ", callback_data="water_custom"),
            InlineKeyboardButton(text="‚öôÔ∏è –ò–∑–º–µ–Ω–∏—Ç—å —Ü–µ–ª—å", callback_data="water_goal")
        ],
        [
            InlineKeyboardButton(text="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞", callback_data="water_stats"),
            InlineKeyboardButton(text="‚óÄÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="water_back")
        ]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)'''




def create_diary_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –¥–Ω–µ–≤–Ω–∏–∫–∞ –ø–∏—Ç–∞–Ω–∏—è."""
    keyboard = [
        [
            InlineKeyboardButton(text="‚óÄÔ∏è –í—á–µ—Ä–∞", callback_data="date:prev"),
            InlineKeyboardButton(text="–°–µ–≥–æ–¥–Ω—è", callback_data="date:today"),
            InlineKeyboardButton(text="–ó–∞–≤—Ç—Ä–∞ ‚ñ∂Ô∏è", callback_data="date:next")
        ],
        [
            InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç", callback_data="add_food"),
            InlineKeyboardButton(text="üóë –û—á–∏—Å—Ç–∏—Ç—å –¥–µ–Ω—å", callback_data="clear_diary")
        ],
        [InlineKeyboardButton(text="‚óÄÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="return_to_main")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def create_recipes_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –º–µ–Ω—é —Ä–µ—Ü–µ–ø—Ç–æ–≤."""
    keyboard = [
        [
            InlineKeyboardButton(text="üîç –ù–∞–π—Ç–∏ —Ä–µ—Ü–µ–ø—Ç", callback_data="recipe:search"),
            InlineKeyboardButton(text="üåü –ò–∑–±—Ä–∞–Ω–Ω—ã–µ", callback_data="recipe:favorites")
        ],
        [
            InlineKeyboardButton(text="‚ûï –°–æ–∑–¥–∞—Ç—å —Å–≤–æ–π", callback_data="recipe:create"),
            InlineKeyboardButton(text="‚ú® –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å", callback_data="recipe:generate")
        ],
        [InlineKeyboardButton(text="‚óÄÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="recipe:back")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def create_recipe_confirmation_keyboard(recipe_id=None):
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —Ä–µ—Ü–µ–ø—Ç–∞."""
    keyboard = []

    if recipe_id:
        # –ï—Å–ª–∏ —ç—Ç–æ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–π —Ä–µ—Ü–µ–ø—Ç
        keyboard.append([
            InlineKeyboardButton(text="‚ù§Ô∏è –í –∏–∑–±—Ä–∞–Ω–Ω–æ–µ", callback_data=f"toggle_favorite:{recipe_id}"),
            InlineKeyboardButton(text="üìù –í –¥–Ω–µ–≤–Ω–∏–∫", callback_data=f"recipe_to_diary:{recipe_id}")
        ])
        keyboard.append([
            InlineKeyboardButton(text="üóë –£–¥–∞–ª–∏—Ç—å", callback_data=f"delete_recipe:{recipe_id}"),
            InlineKeyboardButton(text="‚óÄÔ∏è –ù–∞–∑–∞–¥", callback_data="return_to_recipes")
        ])
    else:
        # –ï—Å–ª–∏ —ç—Ç–æ –Ω–æ–≤—ã–π —Ä–µ—Ü–µ–ø—Ç
        keyboard.append([
            InlineKeyboardButton(text="‚úÖ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å", callback_data="recipe:save"),
            InlineKeyboardButton(text="‚ùå –û—Ç–º–µ–Ω–∏—Ç—å", callback_data="recipe:cancel")
        ])

    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def create_meal_plan_keyboard():
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –ø–ª–∞–Ω–∞ –ø–∏—Ç–∞–Ω–∏—è."""
    keyboard = [
        [
            InlineKeyboardButton(text="‚óÄÔ∏è –í—á–µ—Ä–∞", callback_data="plan_date:prev"),
            InlineKeyboardButton(text="–°–µ–≥–æ–¥–Ω—è", callback_data="plan_date:today"),
            InlineKeyboardButton(text="–ó–∞–≤—Ç—Ä–∞ ‚ñ∂Ô∏è", callback_data="plan_date:next")
        ],
        [
            InlineKeyboardButton(text="‚ûï –î–æ–±–∞–≤–∏—Ç—å –±–ª—é–¥–æ", callback_data="plan:add"),
            InlineKeyboardButton(text="üîÑ –°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å", callback_data="plan:generate")
        ],
        [
            InlineKeyboardButton(text="üìù –î–æ–±–∞–≤–∏—Ç—å –≤ –¥–Ω–µ–≤–Ω–∏–∫", callback_data="plan:to_diary"),
            InlineKeyboardButton(text="üóë –û—á–∏—Å—Ç–∏—Ç—å", callback_data="plan:clear")
        ],
        [InlineKeyboardButton(text="‚óÄÔ∏è –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="plan:back")]
    ]
    return InlineKeyboardMarkup(inline_keyboard=keyboard)


def create_recent_foods_keyboard(recent_foods):
    """–°–æ–∑–¥–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –≤—ã–±–æ—Ä–∞ –Ω–µ–¥–∞–≤–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–æ–≤."""
    keyboard = []

    for food in recent_foods:
        food_name = food['food_name']
        if len(food_name) > 25:
            food_name = food_name[:22] + "..."

        keyboard.append([
            InlineKeyboardButton(
                text=f"{food_name} ({food['calories']} –∫–∫–∞–ª)",
                callback_data=f"recent_food:{food['id']}"
            )
        ])

    keyboard.append([
        InlineKeyboardButton(
            text="‚úèÔ∏è –í–≤–µ—Å—Ç–∏ –¥—Ä—É–≥–æ–π –ø—Ä–æ–¥—É–∫—Ç",
            callback_data="add_food"
        ),
        InlineKeyboardButton(
            text="‚óÄÔ∏è –ù–∞–∑–∞–¥",
            callback_data="return_to_diary"
        )
    ])

    return InlineKeyboardMarkup(inline_keyboard=keyboard)